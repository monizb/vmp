import { ObjectId } from 'mongodb';

export class Vulnerability {
  constructor(data = {}) {
    this._id = data._id ? new ObjectId(data._id) : new ObjectId();
    this.applicationId = data.applicationId ? new ObjectId(data.applicationId) : null;
    this.reportId = data.reportId ? new ObjectId(data.reportId) : null;
    this.title = data.title || '';
    this.description = data.description || '';
    this.severity = data.severity || 'Medium';
    this.cvssScore = data.cvssScore || null;
    this.cvssVector = data.cvssVector || '';
    this.cwe = data.cwe || [];
    this.cve = data.cve || [];
    this.status = data.status || 'New';
    this.discoveredDate = data.discoveredDate || new Date();
    this.dueDate = data.dueDate || null;
    this.resolvedDate = data.resolvedDate || null;
    this.assignedToUserId = data.assignedToUserId ? new ObjectId(data.assignedToUserId) : null;
    this.tags = data.tags || [];
    this.year = data.year || new Date().getFullYear(); // Year when vulnerability was first discovered
    this.instanceId = data.instanceId || null; // For tracking multiple instances of the same vulnerability
    this.originalVulnId = data.originalVulnId ? new ObjectId(data.originalVulnId) : null; // Reference to original vulnerability
    this.relatedVulnIds = data.relatedVulnIds || []; // Array of related vulnerability IDs (same vulnerability across different reports)
    this.createdAt = data.createdAt || new Date();
    this.updatedAt = data.updatedAt || new Date();
  }

  static fromMongo(doc) {
    if (!doc) return null;
    return new Vulnerability({
      _id: doc._id,
      applicationId: doc.applicationId,
      reportId: doc.reportId,
      title: doc.title,
      description: doc.description,
      severity: doc.severity,
      cvssScore: doc.cvssScore,
      cvssVector: doc.cvssVector,
      cwe: doc.cwe,
      cve: doc.cve,
      status: doc.status,
      discoveredDate: doc.discoveredDate,
      dueDate: doc.dueDate,
      resolvedDate: doc.resolvedDate,
      assignedToUserId: doc.assignedToUserId,
      tags: doc.tags,
      year: doc.year,
      instanceId: doc.instanceId,
      originalVulnId: doc.originalVulnId,
      relatedVulnIds: doc.relatedVulnIds,
      createdAt: doc.createdAt,
      updatedAt: doc.updatedAt,
    });
  }

  toMongo() {
    return {
      _id: this._id,
      applicationId: this.applicationId,
      reportId: this.reportId,
      title: this.title,
      description: this.description,
      severity: this.severity,
      cvssScore: this.cvssScore,
      cvssVector: this.cvssVector,
      cwe: this.cwe,
      cve: this.cve,
      status: this.status,
      discoveredDate: this.discoveredDate,
      dueDate: this.dueDate,
      resolvedDate: this.resolvedDate,
      assignedToUserId: this.assignedToUserId,
      tags: this.tags,
      year: this.year,
      instanceId: this.instanceId,
      originalVulnId: this.originalVulnId,
      relatedVulnIds: this.relatedVulnIds,
      createdAt: this.createdAt,
      updatedAt: this.updatedAt,
    };
  }

  toJSON() {
    return {
      id: this._id.toString(),
      applicationId: this.applicationId ? this.applicationId.toString() : null,
      reportId: this.reportId ? this.reportId.toString() : null,
      title: this.title,
      description: this.description,
      severity: this.severity,
      cvssScore: this.cvssScore,
      cvssVector: this.cvssVector,
      cwe: this.cwe,
      cve: this.cve,
      status: this.status,
      discoveredDate: this.discoveredDate,
      dueDate: this.dueDate,
      resolvedDate: this.resolvedDate,
      assignedToUserId: this.assignedToUserId ? this.assignedToUserId.toString() : null,
      tags: this.tags,
      year: this.year,
      instanceId: this.instanceId,
      originalVulnId: this.originalVulnId ? this.originalVulnId.toString() : null,
      relatedVulnIds: this.relatedVulnIds,
      createdAt: this.createdAt,
      updatedAt: this.updatedAt,
    };
  }
} 